{"version":3,"sources":["components/Header.js","components/Footer.js","components/common/Button.js","components/common/Modal.js","hooks/useOnClickOutside.js","components/common/Card.js","components/common/Spinner.js","pages/StakingPage.js","utils.js","App.js","index.js"],"names":["useState","clicked","setClicked","className","href","src","width","alt","cx","onClick","window","scrollTo","document","body","style","overflowY","aria-label","aria-expanded","height","viewBox","d","fluid","Date","getFullYear","color","bgColor","showBorder","children","uppercase","Modal","onClose","title","ref","useRef","handler","useEffect","listener","event","current","contains","target","addEventListener","removeEventListener","useOnClickOutside","querySelector","classList","remove","backgroundColor","top","left","zIndex","minWidth","maxWidth","noLine","Spinner","animationDuration","size","borderWidth","borderTopColor","borderBottomColor","defaultProps","HomePage","loading","setLoading","stakeLoading","setStakeLoading","unstakeLoading","setUnstakeLoading","withdrawLoading","setWithdrawLoading","error","setError","web3","setWeb3","accounts","setAccounts","mcnStake","setMcnStake","mcnToken","setMcnToken","totalSupply","setTotalSupply","balance","setBalance","totalStaked","setTotalStaked","stakes","setStakes","minStake","setMinStake","stakingTax","setStakingTax","unstakingTax","setUnstakingTax","registrationTax","setRegistrationTax","referralRewards","setReferralRewards","referralCount","setReferralCount","dailyROI","setDailyROI","stakingRewards","setStakeRewards","minRegister","setMinRegister","totalRewards","setTotalRewards","registeredStatus","setRegisteredStaus","amount","setAmount","unstakeAmount","setUnstakeAmount","referrer","setReferrer","showModal","setShowModal","init","a","isReady","Promise","resolve","reject","ethereum","Web3","enable","console","log","provider","providers","HttpProvider","eth","getAccounts","net","getId","Contract","ERC20","abi","methods","call","balanceOf","MCNStake","minimumStakeValue","stakingTaxRate","unstakingTaxRate","registered","status","on","updateAll","all","updateStakes","updateTotalSupply","updateAccountBalance","updateTotalStaked","stakeRewards","minRegisteration","totalReward","updateReferrals","updateStatus","stake","parseInt","tax","value","sum","rewards","calculateEarnings","owing","recorded","referral","actual","arg","fromExponential","approve","send","from","length","registerAndStake","code","parseFloat","unstake","withdrawEarnings","selectedAddress","networkVersion","triggerAlreadyInjectedWeb3","Button","Header","Card","toFixed","type","placeholder","onChange","e","Footer","App","path","exact","StakingPage","baseUrl","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","render","basename"],"mappings":"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","file":"static/js/main.47c51cde.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport cx from \"classnames\";\r\n\r\nexport default () => {\r\n  const [clicked, setClicked] = useState(false);\r\n\r\n  const renderButton = () => {\r\n    return (\r\n      <button\r\n        className={cx(\r\n          \"menu focus:outline-none\",\r\n          clicked ? \"opened absolute z-50 top-0 right-1 mt-2\" : \"\"\r\n        )}\r\n        onClick={() => {\r\n          window.scrollTo(0, 0);\r\n          if (!clicked) {\r\n            document.body.style.overflowY = \"hidden\";\r\n          } else {\r\n            document.body.style.overflowY = \"auto\";\r\n          }\r\n          setClicked(!clicked);\r\n        }}\r\n        aria-label=\"Main Menu\"\r\n        aria-expanded={clicked}\r\n      >\r\n        <svg width=\"60\" height=\"60\" viewBox=\"0 0 100 100\">\r\n          <path\r\n            className=\"line line1\"\r\n            d=\"M 20,29.000046 H 80.000231 C 80.000231,29.000046 94.498839,28.817352 94.532987,66.711331 94.543142,77.980673 90.966081,81.670246 85.259173,81.668997 79.552261,81.667751 75.000211,74.999942 75.000211,74.999942 L 25.000021,25.000058\"\r\n          />\r\n          <path className=\"line line2\" d=\"M 20,50 H 80\" />\r\n          <path\r\n            className=\"line line3\"\r\n            d=\"M 20,70.999954 H 80.000231 C 80.000231,70.999954 94.498839,71.182648 94.532987,33.288669 94.543142,22.019327 90.966081,18.329754 85.259173,18.331003 79.552261,18.332249 75.000211,25.000058 75.000211,25.000058 L 25.000021,74.999942\"\r\n          />\r\n        </svg>\r\n      </button>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <header className=\"container px-4 mx-auto py-4\">\r\n      <div className=\"flex flex-row justify-between items-center relative\">\r\n        <a\r\n          href=\"https://www.multichannel.tech/\"\r\n          className=\"logo flex flex-row items-center\"\r\n        >\r\n          <img\r\n            src=\"/images/logo.png\"\r\n            width=\"180\"\r\n            className=\"cursor-pointer\"\r\n            alt=\"MLC\"\r\n          />\r\n        </a>\r\n        <div className=\"cursor-pointer\">{renderButton()}</div>\r\n      </div>\r\n      <div\r\n        className={cx(\r\n          \"w-full h-full fixed inset-0 z-40  text-white font-Montserrat-ExtraBold uppercase flex-col justify-center text-4xl transition duration-500 ease-in-out\",\r\n          clicked ? \"flex bg-black\" : \"hidden bg-transparent\"\r\n        )}\r\n      >\r\n        <div className=\"flex flex-col mx-auto justify-center text-center\">\r\n          <a\r\n            className={cx(\r\n              \"transition duration-500 ease-in-out delay-500 py-4\",\r\n              clicked ? \"opacity-100\" : \"opacity-0\"\r\n            )}\r\n            href=\"https://leadwallet.io/aboutus\"\r\n          >\r\n            About Us\r\n          </a>\r\n          <a\r\n            className={cx(\r\n              \"transition duration-500 ease-in-out delay-500 py-4\",\r\n              clicked ? \"opacity-100\" : \"opacity-0\"\r\n            )}\r\n            href=\"https://www.multichannel.tech/2\"\r\n          >\r\n            Features\r\n          </a>\r\n          <a\r\n            className={cx(\r\n              \"transition duration-500 ease-in-out delay-500 py-4\",\r\n              clicked ? \"opacity-100\" : \"opacity-0\"\r\n            )}\r\n            href=\"https://www.multichannel.tech/3\"\r\n          >\r\n            Project\r\n          </a>\r\n          <a\r\n            className={cx(\r\n              \"transition duration-500 ease-in-out delay-500 py-4\",\r\n              clicked ? \"opacity-100\" : \"opacity-0\"\r\n            )}\r\n            href=\"https://www.multichannel.tech/4\"\r\n          >\r\n            Road Map\r\n          </a>\r\n          <a\r\n            className={cx(\r\n              \"transition duration-500 ease-in-out delay-500 py-4\",\r\n              clicked ? \"opacity-100\" : \"opacity-0\"\r\n            )}\r\n            href=\"https://www.multichannel.tech/6\"\r\n          >\r\n            Tokens\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div className=\"py-8 footer-bg\">\r\n      <footer className=\"container mx-auto px-4\">\r\n        {/* <div className=\"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-3 gap-4\">\r\n          <div>\r\n            <a\r\n              href=\"https://www.multichannel.tech/index.html\"\r\n              className=\"logo flex flex-row items-center\"\r\n            >\r\n              <img\r\n                src=\"/images/logo.png\"\r\n                width=\"220\"\r\n                className=\"cursor-pointer\"\r\n                alt=\"MLC\"\r\n              />\r\n            </a>\r\n            <div className=\"uppercase text-white text-md mb-3 mt-4 text-left\">\r\n              Follow Us\r\n            </div>\r\n            <div className=\"flex flex-row items-center \">\r\n              <a\r\n                href=\"https://instagram.com/lead_wallet\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"mr-4\"\r\n              >\r\n                <img src=\"/images/sm-instagram.svg\" alt=\"\" width=\"20\" />\r\n              </a>\r\n              <a\r\n                href=\"https://www.linkedin.com/company/leadwallet\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"mr-4\"\r\n              >\r\n                <img src=\"/images/sm-linkedin.svg\" alt=\"\" width=\"20\" />\r\n              </a>\r\n              <a\r\n                href=\"https://twitter.com/Multichannel_\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"mr-4\"\r\n              >\r\n                <img src=\"/images/sm-twitter.svg\" alt=\"\" width=\"20\" />\r\n              </a>\r\n              <a\r\n                href=\"https://www.reddit.com/r/LeadWallet\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"mr-4\"\r\n              >\r\n                <img src=\"/images/sm-reddit.svg\" alt=\"\" width=\"20\" />\r\n              </a>\r\n              <a\r\n                href=\"https://github.com/leadwallet\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"mr-4\"\r\n              >\r\n                <img src=\"/images/sm-github.svg\" alt=\"\" width=\"20\" />\r\n              </a>\r\n              <a\r\n                href=\"https://medium.com/@LeadWallet\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"mr-4\"\r\n              >\r\n                <img src=\"/images/sm-medium.svg\" alt=\"\" width=\"20\" />\r\n              </a>\r\n              <a\r\n                href=\"https://t.me/MC_Network\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"mr-4\"\r\n              >\r\n                <img src=\"/images/sm-telegram.svg\" alt=\"\" width=\"20\" />\r\n              </a>\r\n              <a\r\n                href=\"info@multichannel.tech\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"mr-4\"\r\n              >\r\n                <img src=\"/images/email.svg\" alt=\"\" width=\"20\" />\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <div className=\"text-white leading-7 text-xs cursor-pointer\">\r\n            <div className=\"font-Montserrat-ExtraBold uppercase\">Products</div>\r\n            <div>Business Console</div>\r\n            <div>Settlement Layer</div>\r\n            <div>Crypto Wallets</div>\r\n            <div>LEAD Pride</div>\r\n          </div>\r\n          <div className=\"text-white leading-7 text-xs cursor-pointer flex flex-col\">\r\n            <a\r\n              href=\"https://www.multichannel.tech/1\"\r\n              className=\"font-Montserrat-ExtraBold uppercase\"\r\n            >\r\n              About Us\r\n            </a>\r\n            <div>Project</div>\r\n            <a href=\"https://www.multichannel.tech/2\">Feature</a>\r\n            <a href=\"https://www.multichannel.tech/3\">Project</a>\r\n            <div>Ecosystem</div>\r\n            <a href=\"https://www.multichannel.tech/4\">The Road Map</a>\r\n            <a href=\"https://www.multichannel.tech/6\">The Tokens</a>\r\n          </div>\r\n          <div className=\"text-white leading-7 text-xs cursor-pointer\">\r\n            <div className=\"font-Montserrat-ExtraBold uppercase\">Solutions</div>\r\n            <div>Grow Your Business with our Monetization</div>\r\n            <div>Technology</div>\r\n            <div>The PSP Solution</div>\r\n            <div>Use Your Cryptocurrency</div>\r\n          </div>\r\n          <div className=\"text-white leading-7 text-xs cursor-pointer flex flex-col\">\r\n            <div className=\"font-Montserrat-ExtraBold uppercase\">\r\n              Documentation\r\n            </div>\r\n            <a\r\n              href=\"#https://leadwallet.io/en/docs/White Paper v1_0_2.pdf\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Whitepaper\r\n            </a>\r\n            <a\r\n              href=\"#https://leadwallet.io/en/docs/Privacy Policy.pdf\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Privacy Policy\r\n            </a>\r\n            <a\r\n              href=\"#https://leadwallet.io/en/docs/Terms of Service.pdf\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Terms of Service\r\n            </a>\r\n          </div>\r\n        </div> */}\r\n        <div className=\"footer-copyright text-center py-3 text-white\">\r\n        <div fluid>\r\n          &copy; {new Date().getFullYear()} Copyright: <a href=\"#\"> MultiChannel Tech </a>\r\n        </div>\r\n      </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport cx from \"classnames\";\r\n\r\nexport default ({\r\n  color = \"white\",\r\n  bgColor = \"primary\",\r\n  showBorder = false,\r\n  onClick,\r\n  className,\r\n  children,\r\n  uppercase = true,\r\n}) => {\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      className={cx(\r\n        className,\r\n        \"rounded-md px-4 py-2 mx-1 font-Montserrat-ExtraBold\",\r\n        uppercase ? \"uppercase\" : \"\",\r\n        showBorder ? \"border\" : \"\",\r\n        \"bg-\" + bgColor,\r\n        \"hover:bg-\" + bgColor + \"-hover\",\r\n        \"hover:border-\" + bgColor + \"-hover\",\r\n        \"text-\" + color,\r\n        \"hover:text-\" + color + \"-hover\",\r\n        \"border-\" + color,\r\n        \"hover:border-\" + color + \"-hover\"\r\n      )}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n","import React, { useRef } from \"react\";\r\nimport useOnClickOutside from \"../../hooks/useOnClickOutside\";\r\n\r\nconst Modal = ({ children, onClose, title }) => {\r\n  const ref = useRef(null);\r\n\r\n  const closeModal = () => {\r\n    document.querySelector(\"body\").classList.remove(\"overflow-hidden\");\r\n    onClose();\r\n  };\r\n\r\n  useOnClickOutside(ref, () => {\r\n    closeModal();\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className=\"fixed overflow-auto flex items-center\"\r\n      style={{\r\n        backgroundColor: \"rgba(0, 0, 0, .2)\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        top: 0,\r\n        left: 0,\r\n        zIndex: 5000,\r\n      }}\r\n    >\r\n      <div\r\n        ref={ref}\r\n        className=\"relative p-8 border-2 border-primary rounded-md bg-white w-full max-w-md m-auto h-custom\"\r\n        style={{\r\n          minWidth: \"300px\",\r\n          maxWidth: \"700px\",\r\n        }}\r\n      >\r\n        <div className=\"flex flex-row items-center\">\r\n          <div className=\"text-3xl font-bold\">{title}</div>\r\n        </div>\r\n\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { useEffect } from \"react\";\r\n\r\nexport default function useOnClickOutside(ref, handler) {\r\n  useEffect(() => {\r\n    const listener = (event) => {\r\n      // Do nothing if clicking ref's element or descendent elements\r\n      if (!ref.current || ref.current.contains(event.target)) {\r\n        return;\r\n      }\r\n\r\n      handler(event);\r\n    };\r\n\r\n    document.addEventListener(\"mousedown\", listener);\r\n    document.addEventListener(\"touchstart\", listener);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", listener);\r\n      document.removeEventListener(\"touchstart\", listener);\r\n    };\r\n  }, [ref, handler]);\r\n}\r\n","import React from \"react\";\r\n\r\nexport default ({ title, className, noLine, children }) => {\r\n  return (\r\n    <div\r\n      className={\r\n        \"w-full rounded-lg card-bg pb-4\" + (className ? className : \"\")\r\n      }\r\n    >\r\n      <div className={`text-center font-Montserrat-ExtraBold text-white text-2xl uppercase pt-3 pb-2 ${noLine ? \"\" : \"border-b border-dashed border-white\"}`}>\r\n        {title}\r\n      </div>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./Spinner.css\";\r\n\r\nconst Spinner = ({ animationDuration, size, color }) => {\r\n  return (\r\n    <div\r\n      className=\"half-circle-spinner\"\r\n      style={{\r\n        height: `${size}px`,\r\n        width: `${size}px`,\r\n      }}\r\n    >\r\n      <div\r\n        className=\"circle circle-1\"\r\n        style={{\r\n          borderWidth: `${size / 10}px`,\r\n          animationDuration: `${animationDuration}ms`,\r\n          borderTopColor: color,\r\n        }}\r\n      />\r\n      <div\r\n        className=\"circle circle-2\"\r\n        style={{\r\n          borderWidth: `${size / 10}px`,\r\n          animationDuration: `${animationDuration}ms`,\r\n          borderBottomColor: color,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nSpinner.defaultProps = {\r\n  animationDuration: 1000,\r\n  size: 40,\r\n  color: \"#2c6fa5\",\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport NewHeader from \"../components/NewHeader\";\r\nimport Footer from \"../components/Footer\";\r\nimport Button from \"../components/common/Button\";\r\nimport Modal from \"../components/common/Modal\";\r\nimport Card from \"../components/common/Card\";\r\nimport Spinner from \"../components/common/Spinner\";\r\nimport { initWeb3 } from \"../utils.js\";\r\nimport MCNStake from \"../contracts/MCNStake.json\";\r\nimport ERC20 from \"../contracts/ERC20.json\";\r\nimport fromExponential from \"from-exponential\";\r\n\r\nconst HomePage = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [stakeLoading, setStakeLoading] = useState(false);\r\n  const [unstakeLoading, setUnstakeLoading] = useState(false);\r\n  const [withdrawLoading, setWithdrawLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [web3, setWeb3] = useState();\r\n  const [accounts, setAccounts] = useState();\r\n  const [mcnStake, setMcnStake] = useState();\r\n  const [mcnToken, setMcnToken] = useState();\r\n  const [totalSupply, setTotalSupply] = useState();\r\n  const [balance, setBalance] = useState();\r\n  const [totalStaked, setTotalStaked] = useState();\r\n  const [stakes, setStakes] = useState();\r\n  const [minStake, setMinStake] = useState();\r\n  const [stakingTax, setStakingTax] = useState();\r\n  const [unstakingTax, setUnstakingTax] = useState();\r\n  const [registrationTax, setRegistrationTax] = useState();\r\n  const [referralRewards, setReferralRewards] = useState();\r\n  const [referralCount, setReferralCount] = useState();\r\n  const [dailyROI, setDailyROI] = useState();\r\n  const [stakingRewards, setStakeRewards] = useState();\r\n  const [minRegister, setMinRegister] = useState();\r\n  const [totalRewards, setTotalRewards] = useState();\r\n  const [registeredStatus, setRegisteredStaus] = useState();\r\n  const [amount, setAmount] = useState();\r\n  const [unstakeAmount, setUnstakeAmount] = useState();\r\n  const [referrer, setReferrer] = useState();\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const init = async () => {\r\n    if (isReady()) {\r\n      return;\r\n    }\r\n\r\n    setLoading(true); \r\n    let web3;\r\n    try {\r\n      web3 = await initWeb3();\r\n    } catch (err) {\r\n      console.error(err);\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    const accounts = await web3.eth.getAccounts();\r\n    const networkId = await web3.eth.net.getId();\r\n    if (networkId !== 1) {\r\n      setError(\"Please connect Mainnet account\");\r\n      setLoading(false);\r\n      return;\r\n    } \r\n\r\n    // In as much as I am using the same endpoint, then the address should be the same, but you provided a new address as mcnToken for both testnet and mainnet\r\n    // mcnToken methods\r\n    const mcnToken = new web3.eth.Contract(\r\n      ERC20.abi,\r\n      \"0xc047C42554c6495c85108aE8ee66fA4E3B88176d\"\r\n    ); //mainnet address for MCN token\r\n    // total supply\r\n    const totalSupply = await mcnToken.methods.totalSupply().call();\r\n    // check balance\r\n    const balance = await mcnToken.methods.balanceOf(accounts[0]).call();\r\n\r\n    // mcnStake methods\r\n    const mcnStake = new web3.eth.Contract(\r\n      MCNStake.abi,\r\n      \"0xbb02a5552f14822420b4074c44cbd46a85038a89\"\r\n    ); //mainnet adddress for staking dapp\r\n    const totalStaked = await mcnStake.methods.totalStaked().call();\r\n    const minStake = await mcnStake.methods.minimumStakeValue().call();\r\n    const stakingTax = await mcnStake.methods.stakingTaxRate().call();\r\n    const unstakingTax = await mcnStake.methods.unstakingTaxRate().call();\r\n    const registrationTax = await mcnStake.methods.registrationTax().call();\r\n    const referralRewards = await mcnStake.methods\r\n      .referralRewards(accounts[0])\r\n      .call();\r\n    const referralCount = await mcnStake.methods\r\n      .referralCount(accounts[0])\r\n      .call();\r\n    const dailyROI = await mcnStake.methods.dailyROI().call();\r\n    const status = await mcnStake.methods.registered(accounts[0]).call();\r\n\r\n    setWeb3(web3);\r\n    setAccounts(accounts);\r\n    setMcnStake(mcnStake);\r\n    setMcnToken(mcnToken);\r\n    setTotalSupply(totalSupply);\r\n    setBalance(balance);\r\n    setTotalStaked(totalStaked);\r\n    setMinStake(minStake);\r\n    setStakingTax(stakingTax);\r\n    setUnstakingTax(unstakingTax);\r\n    setRegistrationTax(registrationTax);\r\n    setReferralRewards(referralRewards);\r\n    setReferralCount(referralCount);\r\n    setDailyROI(dailyROI);\r\n    setRegisteredStaus(status);\r\n\r\n    window.ethereum.on(\"accountsChanged\", (accounts) => {\r\n      setAccounts(accounts);\r\n    });\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const isReady = () => {\r\n    return !!mcnStake && !!web3 && !!accounts;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const triggerAlreadyInjectedWeb3 = async () => {\r\n      if (window.ethereum) {\r\n        if (\r\n          window.ethereum.selectedAddress &&\r\n          window.ethereum.networkVersion === \"1\"\r\n        ) {\r\n          await init();\r\n        }\r\n      }\r\n    };\r\n    triggerAlreadyInjectedWeb3();\r\n  }, []);\r\n\r\n  async function updateAll() {\r\n    await Promise.all([\r\n      updateStakes(),\r\n      updateTotalSupply(),\r\n      updateAccountBalance(),\r\n      updateTotalStaked(),\r\n      stakeRewards(),\r\n      minRegisteration(),\r\n      totalReward(),\r\n      updateReferrals(),\r\n      updateStatus(),\r\n    ]);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isReady()) {\r\n      updateAll();\r\n    }\r\n  }, [mcnStake, mcnToken, web3, accounts]);\r\n\r\n  async function updateStakes() {\r\n    const stake = await mcnStake.methods.stakes(accounts[0]).call();\r\n    setStakes(stake);\r\n    return stake;\r\n  }\r\n\r\n  async function updateReferrals() {\r\n    if (mcnToken) {\r\n      const referralRewards = await mcnStake.methods\r\n        .referralRewards(accounts[0])\r\n        .call();\r\n      const referralCount = await mcnStake.methods\r\n        .referralCount(accounts[0])\r\n        .call();\r\n      setReferralRewards(referralRewards);\r\n      setReferralCount(referralCount);\r\n    }\r\n  }\r\n\r\n  async function updateAccountBalance() {\r\n    if (mcnToken) {\r\n      const balance = await mcnToken.methods.balanceOf(accounts[0]).call();\r\n      setBalance(balance);\r\n      return balance;\r\n    }\r\n  }\r\n\r\n  async function updateTotalSupply() {\r\n    if (mcnToken) {\r\n      const totalSupply = await mcnToken.methods.totalSupply().call();\r\n      setTotalSupply(totalSupply);\r\n      return totalSupply;\r\n    }\r\n  }\r\n\r\n  async function updateTotalStaked() {\r\n    if (mcnStake) {\r\n      const totalStaked = await mcnStake.methods.totalStaked().call();\r\n      return totalStaked;\r\n    }\r\n  }\r\n\r\n  async function minRegisteration() {\r\n    if (mcnStake) {\r\n      const tax = parseInt(await mcnStake.methods.registrationTax().call());\r\n      const value = parseInt(await mcnStake.methods.minimumStakeValue().call());\r\n      const sum = parseInt(tax / 1000000000000000000) + parseInt(value / 1000000000000000000);\r\n      await setMinRegister(sum);\r\n      return sum;\r\n    }\r\n  }\r\n\r\n  async function stakeRewards() {\r\n    if (mcnStake) {\r\n      const rewards = parseInt(\r\n        await mcnStake.methods.stakeRewards(accounts[0]).call()\r\n      );\r\n      const owing = parseInt(\r\n        await mcnStake.methods.calculateEarnings(accounts[0]).call()\r\n      );\r\n      const sum = rewards + owing;\r\n      await setStakeRewards(sum);\r\n      return sum;\r\n    }\r\n  }\r\n\r\n  async function totalReward() {\r\n    const owing = parseInt(\r\n      await mcnStake.methods.calculateEarnings(accounts[0]).call()\r\n    );\r\n    const recorded = parseInt(\r\n      await mcnStake.methods.stakeRewards(accounts[0]).call()\r\n    );\r\n    const referral = parseInt(\r\n      await mcnStake.methods.referralRewards(accounts[0]).call()\r\n    );\r\n    const sum = owing + referral + recorded;\r\n    await setTotalRewards(sum);\r\n    return sum;\r\n  }\r\n\r\n  async function updateStatus() {\r\n    if (mcnToken) {\r\n      const status = await mcnStake.methods.registered(accounts[0]).call();\r\n      setRegisteredStaus(status);\r\n    }\r\n  }\r\n\r\n  async function registerAndStake() {\r\n    setStakeLoading(true);\r\n    const actual = amount * (10 ** 18);\r\n    const arg = fromExponential(actual);\r\n    try {\r\n      let ref = referrer;\r\n      await mcnToken.methods\r\n        .approve(\"0xbb02a5552f14822420b4074c44cbd46a85038a89\", arg)\r\n        .send({ from: accounts[0] });\r\n      if (!ref || ref.length !== 42)\r\n        ref = \"0x0000000000000000000000000000000000000000\";\r\n      await mcnStake.methods\r\n        .registerAndStake(arg, ref)\r\n        .send({ from: accounts[0] });\r\n      await updateAll();\r\n    } catch (err) {\r\n      if (err.code !== 4001) {\r\n        setShowModal(true);\r\n      }\r\n      console.error(err);\r\n    }\r\n    setStakeLoading(false);\r\n  }\r\n\r\n  async function stake() {\r\n    setStakeLoading(true);\r\n    const actual = amount * (10 ** 18);\r\n    const arg = fromExponential(actual);\r\n    try {\r\n      await mcnToken.methods\r\n        .approve(\"0xbb02a5552f14822420b4074c44cbd46a85038a89\", arg)\r\n        .send({ from: accounts[0] });\r\n        \r\n      await mcnStake.methods.stake(arg).send({ from: accounts[0] });\r\n      await updateAll();\r\n    } catch (err) {\r\n      if (err.code !== 4001) {\r\n        setShowModal(true);\r\n      }\r\n      console.error(err);\r\n    }\r\n    setStakeLoading(false);\r\n  }\r\n\r\n  async function unstake() {\r\n    if (parseFloat(stakes) === 0) {\r\n      console.error(\"You don't have any staked MCNs yet!\");\r\n      return;\r\n    }\r\n    setUnstakeLoading(true);\r\n    const actual = unstakeAmount * (10 ** 18);\r\n    const arg = fromExponential(actual);\r\n    try {\r\n      await mcnStake.methods\r\n        .unstake(arg)\r\n        .send({ from: accounts[0] });\r\n      await updateAll();\r\n    } catch (err) {\r\n      if (err.code !== 4001) {\r\n        setShowModal(true);\r\n      }\r\n      console.error(err);\r\n    }\r\n    setUnstakeLoading(false);\r\n  }\r\n\r\n  async function withdrawEarnings() {\r\n    if (parseFloat(totalRewards) === 0) {\r\n      console.error(\"No earnings yet!\");\r\n      return;\r\n    }\r\n    setWithdrawLoading(true);\r\n    try {\r\n      await mcnStake.methods.withdrawEarnings().send({ from: accounts[0] });\r\n      await updateAll();\r\n    } catch (err) {\r\n      if (err.code !== 4001) {\r\n        setShowModal(true);\r\n      }\r\n      console.error(err);\r\n    }\r\n    setWithdrawLoading(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-full overflow-hidden\">\r\n      {showModal && (\r\n        <Modal title=\"\" onClose={() => setShowModal(false)}>\r\n          <div className=\"text-2xl mb-2\">\r\n            Error! Your transaction has been reverted!\r\n          </div>\r\n          <div>1. Please check your account and retry again...</div>\r\n          <div>2. Your referrer's address is a registered member if any</div>\r\n\r\n          <div className=\"my-2\">\r\n            Thanks for your support and feel free to{\" \"}\r\n            <a href=\"info@multichannel.tech\" className=\"text-blue-500\">\r\n              contact us\r\n            </a>\r\n          </div>\r\n\r\n          <div className=\"flex flex-row justify-center\">\r\n            <Button onClick={() => setShowModal(false)}>Close</Button>\r\n          </div>\r\n        </Modal>\r\n      )}\r\n      {/* <div className=\"relative z-20 w-full top-0\">\r\n        <img\r\n          src=\"/images/nosiy.png\"\r\n          alt=\"\"\r\n          className=\"absolute z-10 top-noisy\"\r\n        />\r\n        <img\r\n          src=\"/images/nosiy.png\"\r\n          alt=\"\"\r\n          className=\"absolute z-10 second-noisy\"\r\n        />\r\n      </div> */}\r\n\r\n      <div className=\"relative z-10 w-full top-0\">\r\n        <div className=\"absolute w-full home-gradient\"></div>\r\n      </div>\r\n\r\n      <div className=\"relative w-full z-30\">\r\n      <Header />\r\n      {/* <header className=\"container px-4 mx-auto py-4\">\r\n        <NewHeader />\r\n      </header> */}\r\n\r\n        <div className=\"container mx-auto pb-18 px-4 force-height\">\r\n          {!accounts && (\r\n            <div className=\"w-full py-6 text-center\">\r\n              \r\n              <Button\r\n                className=\"w-full md:w-2/5 text-2xl flex flex-row justify-center mx-auto buttons\"\r\n                uppercase={false}\r\n                onClick={async () => await init()}\r\n              >\r\n                {loading && <Spinner color=\"white\" size={40} />}\r\n                {!loading && (error !== \"\" ? error : \"CONNECT METAMASK WALLET\")}\r\n              </Button>\r\n\r\n              <div className=\"text-white text-center mt-6 text-base sm:text-lg md:text-xl lg:text-2xl xl:text-3xl font-bold\">\r\n              <h1>MCN STAKING</h1>\r\n              </div>\r\n              <div className=\"w-full md:w-3/6 justify-center mx-auto mt-6\">  \r\n                <Card title=\"Rules\">\r\n                  <div className=\"flex flex-col pt-8 pb-4 text-white text-center\">\r\n                     <ul>\r\n                        <li>\r\n                          1. Connect your MetaMask wallet to participate\r\n                        </li>\r\n                        <li>\r\n                          2. Stake MCN tokens and earn daily returns from allocated pool\r\n                        </li>\r\n                        <li>\r\n                          3. Withdraw earned rewards anytime\r\n                        </li>\r\n                        <li>\r\n                          4. Unstake MCN tokens anytime\r\n                        </li>\r\n                        <li>\r\n                          5. Earn extra rewards by referring new members\r\n                        </li>\r\n                      </ul>\r\n                  </div>\r\n                </Card>\r\n                <div className=\"flex flex-col pt-8 px-2\">\r\n                  <br/><br/><br/><br/>\r\n                </div>\r\n                <Card noLine>\r\n                  <div className=\"flex flex-col px-2\">\r\n                    <div className=\"text-center pb-4\">\r\n                      <div className=\"text-white text-xs\">\r\n                        <span className=\"text-blue-500\">Disclaimer</span> Staking Smart Contract was audited by{\" \"}\r\n                        <a href=\"https://immunebytes.com/\" target=\"_blank\" className=\"text-blue-500\">\r\n                          Immune Bytes\r\n                        </a>. Keep in mind that security audits don't fully eliminate all \r\n                              possible security risks. Use our staking page at your own risk\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Card>\r\n              </div>\r\n            </div>            \r\n          )}\r\n          {accounts && (\r\n            <div className=\"grid grid-col-1 md:grid-cols-2 gap-6 mt-10\">\r\n              <Card title=\"Total Staked MCN\">\r\n                <div className=\"flex flex-col pt-8 pb-4 text-white\">\r\n                  <div className=\"text-center\">\r\n                    <span className=\"text-white text-5xl\">\r\n                      {(\r\n                        (parseFloat(totalStaked).toFixed(2)) /\r\n                        1000000000000000000\r\n                      ).toFixed(2)}\r\n                    </span>\r\n                    <span className=\"text-white text-2xl ml-2\">MCN</span>\r\n                  </div>\r\n                  <div className=\"text-center\">\r\n                    {(\r\n                      (parseFloat(totalStaked) * 100.0) /\r\n                      parseFloat(totalSupply)\r\n                    ).toFixed(5)}\r\n                    %\r\n                  </div>\r\n                  <div className=\"text-center\">of total supply</div>\r\n                </div>\r\n              </Card>\r\n\r\n              <Card title=\"Fees\">\r\n                <div className=\"flex flex-col pt-8 px-2\">\r\n                  <div className=\"text-center pb-8\">\r\n                    <div className=\"text-gray-400 text-lg font-thin\">\r\n                      <ul>\r\n                        <li>\r\n                          Registration Fee:{\"  \"}\r\n                          <span className=\"text-white text-2xl\">\r\n                            {parseInt(registrationTax) / 1000000000000000000} MCN\r\n                          </span>\r\n                        </li>\r\n                        <li>\r\n                          Staking Fee:{\"  \"}\r\n                          <span className=\"text-white text-2xl\">\r\n                            {parseFloat(stakingTax) / 10} %\r\n                          </span>\r\n                        </li>\r\n                        <li>\r\n                          Unstaking Fee:{\"  \"}\r\n                          <span className=\"text-white text-2xl\">\r\n                            {parseFloat(unstakingTax) / 10} %\r\n                          </span>\r\n                        </li>\r\n                        <li>\r\n                          Minimum Stake:{\"  \"}\r\n                          <span className=\"text-white text-2xl\">\r\n                            {parseInt(minStake) / 1000000000000000000} MCN\r\n                          </span>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Card>\r\n\r\n              {!registeredStatus ? (\r\n                <Card title=\"Staking\">\r\n                  <div className=\"flex flex-col pt-8 px-2\">\r\n                    <div className=\"text-center pb-4\">\r\n                      <span className=\"text-lg text-gray-400\">\r\n                        Minimum amount needed:{\" \"}\r\n                      </span>\r\n                      <span className=\"text-white text-3xl\">{parseInt(minRegister)}</span>\r\n                      <span className=\"text-white text-2xl ml-2\">MCN</span>\r\n                    </div>\r\n                    <div className=\"text-center pb-4\">\r\n                      <span className=\"text-lg text-gray-400\">\r\n                        Available amount:{\" \"}\r\n                      </span>\r\n                      <span className=\"text-white text-3xl\">{parseInt(parseInt(balance) / 1000000000000000000)}</span>\r\n                      <span className=\"text-white text-2xl ml-2\">MCN</span>\r\n                    </div>\r\n                    <div className=\"rounded-md border-2 border-primary p-2 flex justify-between items-center\">\r\n                      <input\r\n                        type=\"number\"\r\n                        placeholder=\"MCN To Stake\"\r\n                        value={amount}\r\n                        onChange={(e) => setAmount(e.target.value)}\r\n                        className=\"text-white font-extrabold flex-shrink text-2xl w-full bg-transparent focus:outline-none focus:bg-white focus:text-black px-2\"\r\n                      />\r\n                      <Button\r\n                        onClick={() => registerAndStake()}\r\n                        className=\"flex flex-row items-center w-48 justify-center\"\r\n                      >\r\n                        {stakeLoading ? (\r\n                          <Spinner size={30} />\r\n                        ) : (\r\n                          <>\r\n                            <img src=\"/images/locked.svg\" width=\"25\" alt=\"\" />\r\n                            <span className=\"w-16\">STAKE</span>{\" \"}\r\n                          </>\r\n                        )}\r\n                      </Button>\r\n                    </div>\r\n                    <div className=\"text-white text-center mt-4\">\r\n                      Has referrer's address?\r\n                    </div>\r\n                    <div className=\"rounded-md border-2 border-primary p-2 flex justify-between items-center\">\r\n                      <input\r\n                        placeholder=\"Referrer Address\"\r\n                        value={referrer}\r\n                        onChange={(e) => setReferrer(e.target.value)}\r\n                        className=\"text-white font-extrabold flex-shrink text-2xl w-full bg-transparent focus:outline-none focus:bg-white focus:text-black px-2\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </Card>\r\n              ) : (\r\n                <Card title=\"Staking\">\r\n                  <div className=\"flex flex-col pt-8 px-2\">\r\n                    <div className=\"text-center pb-4\">\r\n                      <span className=\"text-lg text-gray-400\">\r\n                        Minimum amount needed:{\" \"}\r\n                      </span>\r\n                      <span className=\"text-white text-3xl\">{parseInt(minStake) / 1000000000000000000}</span>\r\n                      <span className=\"text-white text-2xl ml-2\">MCN</span>\r\n                    </div>\r\n                    <div className=\"text-center pb-4\">\r\n                      <span className=\"text-lg text-gray-400\">\r\n                        Available amount:{\" \"}\r\n                      </span>\r\n                      <span className=\"text-white text-3xl\">{parseInt(parseInt(balance) / 1000000000000000000)}</span>\r\n                      <span className=\"text-white text-2xl ml-2\">MCN</span>\r\n                    </div>\r\n                    <div className=\"rounded-md border-2 border-primary p-2 flex justify-between items-center\">\r\n                      <input\r\n                        type=\"number\"\r\n                        placeholder=\"MCN To Stake\"\r\n                        value={amount}\r\n                        onChange={(e) => setAmount(e.target.value)}\r\n                        className=\"text-white font-extrabold flex-shrink text-2xl w-full bg-transparent focus:outline-none focus:bg-white focus:text-black px-2\"\r\n                      />\r\n                      <Button\r\n                        onClick={() => stake()}\r\n                        className=\"flex flex-row items-center w-48 justify-center\"\r\n                      >\r\n                        {stakeLoading ? (\r\n                          <Spinner size={30} />\r\n                        ) : (\r\n                          <>\r\n                            <img src=\"/images/locked.svg\" width=\"25\" alt=\"\" />\r\n                            <span className=\"w-16\">STAKE</span>{\" \"}\r\n                          </>\r\n                        )}\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </Card>\r\n              )}\r\n\r\n              <Card title=\"Your Earnings\">\r\n                <div className=\"flex flex-col pt-8 px-2\">\r\n                  <div className=\"text-center pb-8\">\r\n                    <span className=\"text-white text-5xl\">\r\n                      {(parseFloat(totalRewards) / 1000000000000000000).toFixed(2)}\r\n                    </span>\r\n                    <span className=\"text-white text-2xl ml-2\">MCN</span>\r\n                  </div>\r\n                  <div className=\"flex flex-row justify-center\">\r\n                    <Button\r\n                      type=\"submit\"\r\n                      className=\"flex flex-row items-center justify-center w-32\"\r\n                      onClick={() => withdrawEarnings()}\r\n                    >\r\n                      {withdrawLoading ? (\r\n                        <Spinner size={30} />\r\n                      ) : (\r\n                        <>\r\n                          <img src=\"/images/unlocked.svg\" width=\"25\" alt=\"\" />\r\n                          <span className=\"w-24\">CLAIM</span>{\" \"}\r\n                        </>\r\n                      )}\r\n                    </Button>\r\n                  </div>\r\n                  <div className=\"text-center text-white text-2xl mt-8 mx-2\">\r\n                    <div>\r\n                      <div>\r\n                        <span className=\"text-gray-400 text-lg\">\r\n                          Staking Reward:{\" \"}\r\n                        </span>\r\n                        {parseFloat(stakingRewards) / 1000000000000000000} MCN\r\n                      </div>\r\n                      <div>\r\n                        <span className=\"text-gray-400 text-lg\">\r\n                          Daily Return:{\" \"}\r\n                        </span>\r\n                        {parseFloat(dailyROI) / 100} %\r\n                      </div>\r\n                    </div>\r\n                    <div>\r\n                      <div>\r\n                        <span className=\"text-gray-400 text-lg\">\r\n                          Referral Reward:\r\n                        </span>{\" \"}\r\n                        {parseFloat(referralRewards) / 1000000000000000000} MCN\r\n                      </div>\r\n                      <div>\r\n                        <span className=\"text-gray-400 text-lg\">\r\n                          Referral Count:\r\n                        </span>{\" \"}\r\n                        {referralCount}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Card>\r\n\r\n              <Card title=\"Unstaking\">\r\n                <div className=\"flex flex-col pt-8 px-2\">\r\n                  <div className=\"text-center pb-4\">\r\n                      <span className=\"text-lg text-gray-400\">\r\n                        Available to unstake:{\" \"}\r\n                      </span>\r\n                      <span className=\"text-white text-3xl\">{(parseFloat(stakes) / 1000000000000000000).toFixed()}</span>\r\n                      <span className=\"text-white text-2xl ml-2\">MCN</span>\r\n                    </div>\r\n                  <div className=\"rounded-md border-2 border-primary p-2 flex justify-between items-center\">\r\n                    <input\r\n                      type=\"number\"\r\n                      placeholder=\"MCN To Unstake\"\r\n                      value={unstakeAmount}\r\n                      onChange={(e) => setUnstakeAmount(e.target.value)}\r\n                      className=\"text-white font-extrabold flex-shrink text-2xl w-full bg-transparent focus:outline-none focus:bg-white focus:text-black px-2\"\r\n                    />\r\n                    <Button\r\n                      onClick={() => unstake()}\r\n                      className=\"flex flex-row items-center w-48 justify-center\"\r\n                    >\r\n                      {unstakeLoading ? (\r\n                        <Spinner size={30} />\r\n                      ) : (\r\n                        <>\r\n                          <img src=\"/images/unlocked.svg\" width=\"25\" alt=\"\" />\r\n                          <span className=\"w-24\">UNSTAKE</span>\r\n                        </>\r\n                      )}\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </Card>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;","import Web3 from \"web3\";\r\n\r\nconst initWeb3 = () => {\r\n  return new Promise(async (resolve, reject) => {\r\n    if (window.ethereum) {\r\n      const web3 = new Web3(window.ethereum);\r\n      try {\r\n        await window.ethereum.enable();\r\n        resolve(web3);\r\n      } catch (error) {\r\n        reject(error);\r\n      }\r\n    } else if (window.web3) {\r\n      const web3 = window.web3;\r\n      console.log(\"Injected web3 detected.\");\r\n      resolve(web3);\r\n    } else {\r\n      const provider = new Web3.providers.HttpProvider(\"http://localhost:9545\");\r\n      const web3 = new Web3(provider);\r\n      console.log(\"No web3 instance injected, using Local web3.\");\r\n      resolve(web3);\r\n    }\r\n  });\r\n};\r\n\r\nexport { initWeb3 };\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport StakingPage from \"./pages/StakingPage\";\r\nimport NewStaking from \"./pages/NewStaking\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact>\r\n        <StakingPage />\r\n        {/* <NewStaking /> */}\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import \"./styles/tailwind.css\";\r\nimport \"./styles/index.css\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\n\r\nconst baseUrl = document.getElementsByTagName(\"base\")[0].getAttribute(\"href\");\r\nconst rootElement = document.getElementById(\"root\");\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}